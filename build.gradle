buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		jcenter()
	}
}

// Apply to stitch itself, and subprojects

allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'maven-publish'

	sourceCompatibility = 1.8

	def ENV = System.getenv()
	version = version + "+" + (ENV.BUILD_NUMBER ? ("build." + ENV.BUILD_NUMBER) : "local")

	group = 'net.fabricmc'
	archivesBaseName = project.name.toLowerCase()

	repositories {
		mavenCentral()
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
			}
		}

		// select the repositories you want to publish to
		repositories {
			if (project.hasProperty('mavenPass')) {
				maven {
					url = "http://mavenupload.modmuss50.me/"
					credentials {
						username = "buildslave"
						password = project.getProperty('mavenPass')
					}
				}
			}
		}
	}

	test {
		useJUnitPlatform()
	}
}

// Just stitch

configurations {
	ship
	enigma
	implementation.extendsFrom ship
	compileOnly.extendsFrom enigma
	testImplementation.extendsFrom enigma
}

dependencies {
	ship 'org.ow2.asm:asm:8.0'
	ship 'org.ow2.asm:asm-commons:8.0'
	ship 'org.ow2.asm:asm-tree:8.0'
	ship 'org.ow2.asm:asm-util:8.0'
	ship 'net.fabricmc:tiny-mappings-parser:0.2.2.14'
	implementation 'com.google.guava:guava:28.0-jre'
	compileOnly group: 'org.checkerframework', name: 'checker-qual', version: '2.5.7'
	enigma 'cuchaz:enigma:0.20+build.206'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

apply from: 'https://github.com/FabricMC/fabric-docs/raw/master/gradle/license.gradle'

jar {
	manifest {
		attributes 'Implementation-Title': 'Stitch',
				'Implementation-Version': version,
				'Main-Class': "net.fabricmc.stitch.Main"
	}
}

task allJar(type: Jar) {
	from {
		configurations.ship.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
	manifest {
		attributes 'Implementation-Title': 'Stitch',
				'Implementation-Version': version,
				'Main-Class': "net.fabricmc.stitch.Main"
	}
	classifier = 'all'
	with jar
}

artifacts {
	archives allJar
}

publishing.publications.mavenJava {
	artifact(allJar)
}


